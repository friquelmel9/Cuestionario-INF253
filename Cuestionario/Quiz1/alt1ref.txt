begin pregunta-|-a-|-
([2021-2] - Martí Q1P7)
A partir de las siguientes reglas de precedencia para operadores:

Mayor Precedencia   , /, not
                    +, &, mod
                    -, - (unario)
                    =, /=, <, <=, >=, >
                    and
Menor Precedencia   or, xor

Y considerando asociatividad de izquierda a derecha, ¿cuál es el orden correcto de evaluación de la expresión: a * b – 1 + c?
Seleccione una:
a. ((a * b )1 – (1 + c)2 )3
b. (((a * (b - 1)1 )2 + c)3)
c. (((a * b )1 - 1)2 + c)3
d. ((a * (b – (1 + c)1)2)3)

*Los numeros son el orden en la cual  se evalua la expresion que tiene a la izquierda en parentsis*
end pregunta

begin pregunta-|-d-|-
([2021-2] - Martí Q1P12)

Tomar en cuenta el siguiente programa, escrito en sintaxis tipo Javascript:

    // main
    var x, y, z;
    function sub1() {
        var a, y, z;
        …
    }
    function sub2() {
        var a, b, z;
        …
    }
    function sub3() {
        var a, x, w;
        …
    }

Dada la siguiente secuencia de llamadas en un ámbito dinámico: main --> sub1() --> sub3() --> sub2(), ¿cuáles
son todas las variables visibles durante la ejecución de sub2()?

a. a local, b local, x de main, y de sub1(), z local
b. a local, b local, x de main, y de main, z local
c. a local, b local, z local
d. a local, b local, w de sub3(), x de sub3(), y de sub1(), z local
end pregunta

begin pregunta-|-e-|-
([2021-2] - Martí Q1P14 - PREGUNTA ADAPTADA)

Dada la siguiente BNF:

    Sentencia :: = ( [Operador] Sentencia [Expresion] ) | Constante | Reservada
    Expresion :: = Sentencia | ( Expresion [Expresion] Operador )
    Operador :: = + | *
    Constante :: = 0 | 1 | 2 | 3 | 4 | 5
    Reservada :: = if | else | while

¿Cuáles de las siguientes expresiones no son válidas para esta gramática?

I)   ( + 4 5)
II)  (* (0 1 +)) 
III) (else if)
IV)  (* if (4 + else))

a. Solo I
b. Solo II
c. Solo III
d. Solo IV
d. I, II y III
e. II, III y IV
end pregunta

begin pregunta-|-a-|-
([2022-1] - Rodrigo S.  Q1P6)

Dado el siguiente EBNF

    <inicio> ::= <variable> = <expresion>
    <variable> ::= x|y|z
    <expresion> ::= <expresion> @ <termino> | <termino>
    <termino> ::= <termino> # <expresion> | <variable>

¿Cuál de las siguientes expresiones no es válida para la gramática?

a. todas son válidas
b. x = x@y#z 
c. z = x@y@z#z
d. y = y#z@x

end pregunta

begin pregunta-|-a-|-
([2022-1] - Rodrigo S.  Q1P12)

La siguiente BNF genera árboles sintácticos ambiguos:

    <inicio> ::= <variable> = <expresion>
    <variable> ::= x|y|z
    <expresion> ::= <expresion> @ <termino> | <termino>
    <termino> ::= <termino> # <expresion> | <variable>

Seleccione la respuesta correcta:

a. Falso, el # tiene mayor precedencia que el @
b. Verdadero
c. Falso, el @ tiene mayor precedencia que el # 
end pregunta

begin pregunta-|-c-|-
([2022-1] - Rodrigo S.  Q1P14)

La secuencia principal de compilación de un programa es la siguiente:

a. Programa fuente, Generador de código intermedio, analizador léxico, analizador sintáctico, Generador de Código, Lenguaje de Máquina.
b. Programa fuente, analizados semántico, analizador sintáctico, Generador de código y analizador léxico, Lenguaje de Máquina.
c. Programa fuente, analizados léxico, analizador sintáctico, Generador de código intermedio y analizador semántico, Generador de Código, Lenguaje de Máquina.
d. Programa fuente, analizados léxico, analizador semántico, Generador de código intermedio y analizador sintáctico, Generador de Código, Lenguaje de Máquina.
end pregunta

begin pregunta-|-b-|-
([2022-1] - Rodrigo S.  Q1P15)

Los lenguajes de programación pueden ser categorizado acorde a uno de los siguientes paradigmas:

a. Puede ser sólo Imperativo o Funcional
b. Puede ser sólo Imperativo, o funcional, o declarativo, u orientado a objetos. 
c. Puede incorporar múltiples paradigmas
end pregunta

begin pregunta-|-c-|-
([2024-2] - Wladimir O.  Q1P1)

Considere una grámática libre de contexto definida en base a los siguientes elementos:

V: X,Y,Z
Σ: a,b,c
S: X
        X  → Y|Z
        aX → Z
        Z  → ϵ
        Y  → aX|bZ|cZ

Indique la alternativa correcta:

a. Estamos en presencia de eBNF en realidad. 
b. Las reglas de producción indicadas en  son más bien expresiones regulares. 
c. No es en realidad una grámatica libre de contexto. 
d.  es el conjunto de símbolos no terminales. 
e. Ninguna de las alternativas es correcta.
end pregunta

begin pregunta-|-d-|-
([2024-2] - Wladimir O.  Q1P2)

En base al siguiente fragmento de código escrito en C++:

    extern int x; 
    int y; 
    int z = 0; 

Indique la alternativa correcta:

a. "x", "y" y "z" están declaradas, pero solo "z" esta definida. 
b. "x", "y" y "z" están definidas, pero solo "z" esta declarada. 
c. "x" y "y" están declaradas, y solo "z" esta definida. 
d. "x", "y" y "z" están declaradas, pero solo "y" y "z" estan definidas. 
e. Ninguna de las alternativas es correcta.
end pregunta

begin pregunta-|-e-|-
([2024-2] - Wladimir O.  Q1P3)

En base al siguiente fragmento de código escrito en C++:

    void funcion1(){ 
    static double x = 0; 
    x = x + 1; 
    cout <<"x: "<< x <<endl; 
    }; 

La "x" variable  es de tipo:

a. Dinámica de stack, y solo visible dentro de la función. 
b. Dinámica de stack, y visible desde fuera de la función. 
c. Dinámica de heap, y visible desde fuera de la función. 
d. Estática, y visible desde fuera de la función. 
e. Estática, y solo visible dentro de la función.
end pregunta

begin pregunta-|-a-|-
([2024-2] - Wladimir O.  Q1P5)

Sobre las variables estáticas, es incorrecto afirmar que: 

a. Son escencialmente útiles para implementar recursión. 
b. Su memoria no se reasigna durante todo el tiempo de ejecución. 
c. Se pueden utilizar en diferentes ámbitos. 
d. En C++ se indican utilizando static. 
e. Todas las afirmaciones son correctas.
end pregunta

begin alt -|-b-|-

([2024-2] - Jose Luis Marti. Q1P11)
Cual de los siguientes no corresponde a un paradigma de la programacion?
a. Imperativo
b. Estatico
c. Orientado a objeto
d. Logico

end alt
begin alt -|-b-|-

([2024-2] - Jose Luis Marti. Q1P12)
Cual de los conceptos siguientes no esta definido como corresponde?
a. Semantica: Estudio del significado de los signos linguistiscos y de sus combinaciones
b. Lenguaje (formal): Conjunto de reglas que definen las secuencias correctas de los elementos de un lenguaje de programacion
c. Alfabeto: Conjunto de simbolos, letras o tokens con el cual se puede formar la cadena de un lenguaje.
d. Gramatica (formal): Estructura matematica con un conjunto de reglas de formacion que definen las cadenas de caracteres admisibles en un determinado lenguaje formal

end alt
begin alt -|-c-|-

([2024-2] - Jose Luis Marti. Q1P13)
Cual de los siguientes casos no se hace uso de la memoria estatica?
a. Variable definida con el modificador sintactico
b. Variable local compartida
c. Parametro
d. Variable global

end alt
begin pregunta-|-a-|-
([2024-2] - Jose Luis Marti. Q1P14)
A partir de las siguientes reglas de precedencia para operadores:

Mayor Precedencia   , /, not
                    +, -, -(unario)
                    -, - (unario)
                    =, /=, <, <=, >=, >
                    and
Menor Precedencia   or, xor

Y considerando asociatividad de derecha a izquierda, ¿cuál es el orden correcto de evaluación de la expresión: a b – 1 + c?
Seleccione una:
a. ((a * b ){1} – (1 + c){2} ){3}
b. (((a * (b-1) {1} ) {2} ) + c){3}
c. ((a * (b - (1 + c){1} ) {2} ) {3})
d. (((a * b){1} - 1){2} + c){3}

Los numeros con {} son el orden en la cual  se evalua la expresion que tiene a la izquierda en parentsis
end pregunta

begin alt -|-d-|-

([2024-2] - Jose Luis Marti. Q1P15)

Considere la siguiente funcion en C, es cierto que...

    char f(chara)
    {
        static int b = 0;
        int c = strlen(a);
        char d = malloc(c - b++);

        return d ? strcpy(d, a+b) : NULL;
    }

a. c es una variable de stack y a una de heap
b. b es una variable estatica y d una de heap
c. c es una variable de heap y a una de heap
d. c es una variable de stack yd una de heap

end alt
